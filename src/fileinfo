#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright Â© 2013 ivali.com
# Author: Zhongxin Huang <zhongxin.huang@gmail.com>
#

import sys
import os
from ybs import ybsutils
import argparse


def get_info(indir):
    ''' Show attribution of files and directories under given directory.

    Args:
      indir: string, path to directory

    '''
    fcount = dcount = scount = disk_usage_count = file_size_count = 0
    colls = []
    for root, dirs, files in os.walk(indir):
        for dir_ in dirs:
            colls.append(os.path.join(root, dir_))
        for file_ in files:
            colls.append(os.path.join(root, file_))
    for x in colls:
        name = x.replace(indir, '')
        if os.path.islink(x):
            lst = os.lstat(x)
            size = lst.st_size
            mode = oct(lst.st_mode & 0o777)
            uid = lst.st_uid
            gid = lst.st_gid
            mtime = int(lst.st_mtime)
            dest = os.path.realpath(x).replace(indir, '')
            print(('S,{},{},{},{},{},{},{}'.format(name, size, mode, uid, gid, mtime, dest)))
            scount += 1
            disk_usage_count += lst.st_blocks
        else:
            fdst = os.stat(x)
            size = fdst.st_size
            mode = oct(fdst.st_mode & 0o777)
            uid = fdst.st_uid
            gid = fdst.st_gid
            mtime = int(fdst.st_mtime)
            disk_usage_count += fdst.st_blocks
            if os.path.isdir(x):
                print(('D,{},{},{},{},{},{}'.format(name, size, mode, uid, gid, mtime)))
                dcount += 1
            else:
                md5sum = ybsutils.get_md5sum(x)
                print(('F,{},{},{},{},{},{},{}'.format(name, size, mode, uid, gid, mtime, md5sum)))
                fcount += 1
                file_size_count += size
    print(('I,{},{},{},{},{}'.format(fcount, dcount, scount, disk_usage_count/2,
                                    (file_size_count-1)/1024+1)))


def main():
    argvs = sys.argv[1:]
    if not argvs:
        argvs = ['-h']

    desc = 'Show attribution of files and directories under given directory.'
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('-v', '--version', action='store_true',
                        dest='v', help='show version and exit')
    parser.add_argument('dir', nargs='*', help='path to directory')
    args = parser.parse_args(argvs)

    if args.v:
        print(ybsutils.__version__)
        sys.exit()

    if args.dir:
        for dir_ in args.dir:
            dir_ = os.path.realpath(dir_)
            if os.path.isdir(dir_):
                get_info(dir_)
            else:
                sys.stderr.write("'{}' is not a directory.\n".format(dir_))
                continue


if __name__ == '__main__':
    main()
